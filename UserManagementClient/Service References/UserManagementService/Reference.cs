//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserManagementClient.UserManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Domain")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserManagementService.IUserManagementService")]
    public interface IUserManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsers", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersResponse")]
        System.Collections.Generic.List<UserManagementClient.UserManagementService.User> GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsers", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<UserManagementClient.UserManagementService.User>> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUser", ReplyAction="http://tempuri.org/IUserManagementService/AddUserResponse")]
        void AddUser(UserManagementClient.UserManagementService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AddUser", ReplyAction="http://tempuri.org/IUserManagementService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(UserManagementClient.UserManagementService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ModifyUser", ReplyAction="http://tempuri.org/IUserManagementService/ModifyUserResponse")]
        void ModifyUser(string username, UserManagementClient.UserManagementService.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/ModifyUser", ReplyAction="http://tempuri.org/IUserManagementService/ModifyUserResponse")]
        System.Threading.Tasks.Task ModifyUserAsync(string username, UserManagementClient.UserManagementService.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserResponse")]
        void DeleteUser(UserManagementClient.UserManagementService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(UserManagementClient.UserManagementService.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementServiceChannel : UserManagementClient.UserManagementService.IUserManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementServiceClient : System.ServiceModel.ClientBase<UserManagementClient.UserManagementService.IUserManagementService>, UserManagementClient.UserManagementService.IUserManagementService {
        
        public UserManagementServiceClient() {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<UserManagementClient.UserManagementService.User> GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<UserManagementClient.UserManagementService.User>> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public void AddUser(UserManagementClient.UserManagementService.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(UserManagementClient.UserManagementService.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void ModifyUser(string username, UserManagementClient.UserManagementService.User newUser) {
            base.Channel.ModifyUser(username, newUser);
        }
        
        public System.Threading.Tasks.Task ModifyUserAsync(string username, UserManagementClient.UserManagementService.User newUser) {
            return base.Channel.ModifyUserAsync(username, newUser);
        }
        
        public void DeleteUser(UserManagementClient.UserManagementService.User user) {
            base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(UserManagementClient.UserManagementService.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
    }
}
